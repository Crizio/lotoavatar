---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import Markdown from '../components/Markdown.astro';

const explainer = `
An Astro website can go way beyond static pages - on the right platform.

AHAHAHAHAHAHHA
`;
---

<style>
  #avatar-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* L'avatar non interferisce con il resto della pagina */
    z-index: 1000; /* Garantisce che l'avatar sia sopra gli altri elementi */
  }
</style>

<div id="avatar-container">
  <canvas id="avatar-canvas"></canvas>
</div>

<Layout title="Welcome to Astro.">
  <ContextAlert class="mb-4" />
  <h1 class="mb-10">Netlify Platform Starter for Astro</h1>
  <Markdown content={explainer} class="text-lg mb-10" />
  <p class="mb-8">
    <a href="https://docs.netlify.com/frameworks/astro/" class="btn btn-lg btn-primary sm:btn-wide">Read the Docs</a>
  </p>
</Layout>

<script type="module">
  import * as THREE from "three";
  import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";

  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
  const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('avatar-canvas'), alpha: true });
  renderer.setSize(window.innerWidth, window.innerHeight);
  document.body.appendChild(renderer.domElement);

  const loader = new GLTFLoader();
  loader.load('/dist/models/Cute_Demon.glb', (gltf) => {
    const model = gltf.scene;
    model.scale.set(0.3, 0.3, 0.3); // Scala il modello a 0.3
    scene.add(model);
    animate();
  }, undefined, (error) => {
    console.error('Errore durante il caricamento del modello:', error);
  });

  camera.position.z = 5;

  function animate() {
    requestAnimationFrame(animate);
    renderer.render(scene, camera);
  }
</script>
